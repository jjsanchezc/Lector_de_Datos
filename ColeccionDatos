/**
*Clase ColeccionDatos.
*En esta clase se crea y almacena una colección de datos.
*Se maneja un ArrayList.
*@Restrepo y Sanchez.
*@Junio/2020
*/
import java.util.*;
import java.io.*;
import javax.swing.JOptionPane;

public class ColeccionDatos {
    public static ArrayList<Dato> arreglo;
    int contador = 0;

    /**
     * Constructor de la clase ColeccionDatos. Inicializamos el ArrayList
     */
    public ColeccionDatos() {
        arreglo = new ArrayList<>();
    }

    /**
     * Este método lee un archivo indicado por el usuario que se guarda en el disco.
     * Los datos son almacenados en el ArrayList.
     *
     * @param nombreArchivo (nombre del archivo que se quiere leer)
     * @throws FileNotFoundException excepcion determinada en caso de que no exista
     *                               el archivo a leer solicitado por el usuario
     */
    public void LecturaArchivo(String Archivo) throws FileNotFoundException {
        Scanner Dato1 = new Scanner(new File(Archivo));

        while (Dato1.hasNextLine()) {
            String line = Dato1.nextLine();
            line = line.replace(";", " ");

            Scanner lineScan = new Scanner(line);

            String fecha = lineScan.next();
            String hora = lineScan.next();
            String aux = lineScan.next();
            double diezM = Double.parseDouble(aux);

            double bid = Double.parseDouble(aux);

            double ask = Double.parseDouble(aux);

            double last = Double.parseDouble(aux);

            int transa = Integer.parseInt(aux);

            Dato d = new Dato(fecha, hora, diezM, bid, ask, last, transa);
            arreglo.add(d);
            contador++;
        }
        System.out.println("Fueron leídos: " + contador + " datos de manera correcta");
    }

    /**
     * metodo que guara la coleccion de datos en el disco
     * 
     * @param nombreArchivo (referencia del archivo a escribir)
     * @trows FileNotFoundException
     */
    public void escribirArchivo(String nombreArchivo) throws FileNotFoundException {
        PrintStream out = new PrintStream(new File(nombreArchivo));
        for (Dato d : arreglo) {
            out.println(d.getFecha() + " " + d.getHora() + " " + d.getdiezM() + " " + d.getBid() + " " + d.getAsk()
                    + " " + d.getLast() + " " + d.getTransa());
        }
    }

    public void GuardarArchivo(String nombreTexto) throws FileNotFoundException {
        PrintStream out = new PrintStream(new File(nombreTexto));
        for (Dato d : arreglo) {
            out.println(d.getFecha() + " " + d.getHora() + " " + d.getdiezM() + " " + d.getBid() + " " + d.getAsk()
                    + " " + d.getLast() + " " + d.getTransa());
        }
    }

    /**
     * metodo estatico que retorna el arreglo de datos
     */

    public static ArrayList<Dato> getDato() {
        return arreglo;
    }

    /**
     * metodo que realiza la impresion de la coleccion de datos
     */

    public void imprimir() {
        for (Dato d : arreglo) {
            arreglo.forEach(value -> System.out.println(value));
        }
    }
}
